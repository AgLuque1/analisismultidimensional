# Dockerfile.bigdatamed
FROM python:3.11-slim-bookworm

# Instalamos las dependencias necesarias
RUN apt-get update && apt-get install -y gcc build-essential libpq-dev && apt-get clean \
    && apt-get install -y gnupg curl && apt-get install -y wget

# Instalar libssl1.1 manualmente
RUN wget http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.1_1.1.1w-0+deb11u3_amd64.deb \
    && dpkg -i libssl1.1_1.1.1w-0+deb11u3_amd64.deb \
    && rm libssl1.1_1.1.1w-0+deb11u3_amd64.deb

# Creamos carpeta de trabajo
WORKDIR /bigdatamed

# Copiamos requirements e instalar dependencias
COPY requirements.txt .
RUN pip install --upgrade pip && pip install -r requirements.txt

# Copiamos c√≥digo de bigatamed y la API de carga de datos
COPY bigdatamed-main /bigdatamed/bigdatamed-main
COPY API_CLOUDS /bigdatamed/API_CLOUDS

# Copiamos los datos de mongo
COPY mongo-init /data/mongo-init

# Instalamos MongoDB
RUN apt-get update && apt-get install -y mongodb && mkdir -p /data/db

# Copiamos el entrypoint.sh, que contiene codigo para hacer las migraciones y crear usuario de django
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Exponemos puertos (8000 para bidatamed, 5000 para API de carga)
EXPOSE 8000
EXPOSE 5000

# Ejecutamos entrypoint
CMD ["/entrypoint.sh"]
